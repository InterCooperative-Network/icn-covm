use libp2p::PeerId;
use crate::federation::messages::NetworkMessage;

/// Events generated by the network layer
#[derive(Debug, Clone)]
pub enum NetworkEvent {
    /// A new peer was discovered
    PeerDiscovered(PeerId),
    
    /// Connection established with a peer
    PeerConnected(PeerId),
    
    /// Connection lost with a peer
    PeerDisconnected(PeerId),
    
    /// A message was received from a peer
    MessageReceived {
        /// The peer that sent the message
        peer: PeerId,
        
        /// The message that was received
        message: NetworkMessage,
    },
    
    /// DHT query completed (Kademlia)
    DhtQueryCompleted {
        /// Peers found during query
        peers_found: Vec<PeerId>,
        
        /// Whether the query was successful
        success: bool,
    },
    
    /// Error occurred in the network layer
    Error(String),
} 